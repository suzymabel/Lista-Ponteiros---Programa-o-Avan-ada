Questão 20 - Com base no programa-exemplo da questão anterior, proponha uma aplicação que permita
comparar o desempenho das funções tradicionais de alocação/liberação de memória da
linguagem c (malloc/free) com as funções de gerenciamento de memória da biblioteca que você
escolheu. A aplicação deverá ser capaz de ressaltar possíveis atrasos de tempo provenientes do
coletor de lixo utilizado.

# inclui  < stdio.h >
# inclui  < stdlib.h >
# inclui  " gc.h "
# inclui  < asser.h >
# inclui  < time.h >


int  main ( void ){

int , p2;

	clock_t t1;
	clock_t t2;

	const  int tam = 100000; //biblioteca marcando
	
	t1 = relg();
        for (i = 0 ; i < tam; i++){
            int **p1 = GC_MALLOC (sizeof ( int ));  
			}
	t1 = relógio () - t1;
		printf ( " Coletor de lixo: %f s \n " ,(( float )t1)/CLOCKS_PER_SEC);
	
	t2 = relg();
    for (i = 0 ; i < tam; i++){
        int **p2 = malloc ( sizeof ( int ));
        livre (p2);  
		}
	t2 = relg () - t2;
		printf ( " Malloc/free....: %f s \n " ,((float )t2)/CLOCKS_PER_SEC);

}
